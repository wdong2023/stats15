data2017 %>%
filter(totalPrice>=1250) %>% # which districts are houses in the higher 2.5% located
count(district)
# num, portion of high low 2.5% for each district
#DongCheng
data2017 %>%
group_by(district) %>%
summarise(high=n(totalPrice>=1250))
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district)
high <- data2017 %>%
filter(totalPrice>=1250) %>% # which districts are houses in the higher 2.5% located
count(district)
high
# num, portion of high low 2.5% for each district
#DongCheng
#data2017 %>%
# group_by(district) %>%
#XiCheng
#data2017 %>%
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district)
lower2_5
higher2_5 <- data2017 %>%
filter(totalPrice>=1250) %>% # which districts are houses in the higher 2.5% located
count(district)
higher2_5
# num, portion of high low 2.5% for each district
data2017 %>%
group_by(district) %>%
mutate(lower2_5) %>%
mutate(higher2_5)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district)
lower2_5
higher2_5 <- data2017 %>%
filter(totalPrice>=1250) %>% # which districts are houses in the higher 2.5% located
count(district)
higher2_5
# num, portion of high low 2.5% for each district
data2017 %>%
group_by(district) %>%
select(higher2_5)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district)
lower2_5
higher2_5 <- data2017 %>%
filter(totalPrice>=1250) %>% # which districts are houses in the higher 2.5% located
n(district)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district)
lower2_5
higher2_5 <- data2017 %>%
filter(totalPrice>=1250) %>% # which districts are houses in the higher 2.5% located
total(district)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district)
lower2_5
higher2_5 <- data2017 %>%
group_by(district) %>%
filter(totalPrice>=1250) %>% # which districts are houses in the higher 2.5% located
summarise(total=n())
higher2_5
# num, portion of high low 2.5% for each district
data2017 %>%
group_by(district,totalPrice)
#XiCheng
#data2017 %>%
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district)
lower2_5
higher2_5 <- data2017 %>%
group_by(district) %>%
summarise(total1=n()) %>%
filter(totalPrice>=1250) %>% # which districts are houses in the higher 2.5% located
summarise(total2=n()) %>%
mutate(portion=total2/total1)
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
data2017$district %>%
nrow()
# display all x labels
#district_text <- c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi")
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
data2017 %>%
group_by(district) %>%
nrow()
# display all x labels
#district_text <- c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi")
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
data2017 %>%
group_by(district) %>%
count(district)
# display all x labels
#district_text <- c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi")
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
data2017 %>%
group_by(district) %>%
count(district) %>%
arrange(desc())
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
data2017 %>%
group_by(district) %>%
count(district) %>%
arrange(desc(n))
# display all x labels
#district_text <- c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi")
drawingRoom1 <- data2017 %>%
filter(drawingRoom==1) %>%
nrow()
portion_dr1 = drawingRoom1 / 42004
portion_dr1
data2017 %>%
select(id,followers,totalPrice,price,square,district) %>%
slice_max(followers,n=10)
lessthan300 <- data2017 %>%
filter(followers<=300)
nrow(lessthan300)
portion_lessthan300 = nrow(lessthan300)/42004
portion_lessthan300
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n/42004) %>%
arrange(desc(n))
# display all x labels
#district_text <- c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi")
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>%
arrange(desc(n))
# display all x labels
#district_text <- c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi")
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
n(district)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
group_by(district) %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
n(district)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
group_by(district) %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
n()
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
group_by(district) %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district) %>%
pull()
lower2_5
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district) %>%
pull()
lower2_5
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # which districts are houses in the lower 2.5% located
count(district) %>%
pull()
higher2_5 <- data2017 %>%
filter(totalPrice>=1250) %>%
count(district) %>%
pull()
data2017 %>%
group_by(district) %>%
mutate(higher2_5)
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
# display all x labels
#district_text <- c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi")
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) %>%
pull()
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) %>%
pull()
data2017 %>%
group_by(district) %>%
mutate(highpo=higher2_5/district_percentage)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) %>%
pull()
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) %>%
pull()
district_percentage
#data2017 %>%
#group_by(district) %>%
#mutate(highpo=higher2_5/district_percentage)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) %>%
pull()
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) %>%
pull()
num_district_percentage <-district_percentage %>%
pull()
#data2017 %>%
#group_by(district) %>%
#mutate(highpo=higher2_5/district_percentage)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) %>%
pull()
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) %>%
pull()
num_district_percentage <-district_percentage %>%
pull()
data2017 %>%
group_by(district) %>%
mutate(highpo=higher2_5/num_district_percentage)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) %>%
pull()
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) %>%
pull()
num_district_percentage <-district_percentage %>%
pull()
data2017 %>%
group_by(district) %>%
mutate(higher2_5/num_district_percentage)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) %>%
pull()
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) %>%
pull()
num_district_percentage <-district_percentage %>%
pull()
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) %>%
pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) %>%
pull()
higher2_5
num_district_percentage <-district_percentage %>%
pull()
num_district_percentage
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) #%>%
#pull()
#lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) #%>%
#pull()
#higher2_5
num_district_percentage <-district_percentage %>%
pull()
num_district_percentage
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) #%>%
#pull()
higher2_5
num_district_percentage <-district_percentage %>%
pull()
num_district_percentage
ggplot(data2017, aes(x=price))+
geom_histogram(fill='lightblue', color='black') +
xlab("price")+ylab("Count")+ggtitle("Average price per square meter (in yuan) Histogram")
mean(data2017$price)
median(data2017$price)
quantile(data2017$price, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(price<=1194) # House with value 1194 yuan
data2017 %>%
filter(district==7) %>%
summarize(ChaoYang_avg=mean(price)) # ChaoYang(7) mean square per meter
library(ggplot2)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
scale_x_discrete(limits = c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi"))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
# display all x labels
#district_text <- c("DongCheng", "FengTai", "YiZhuang", "DaXing", "FangShan", "ChangPing", "ChaoYang", "HaiDian" , "ShiJingShan", "XiCheng", "TongZhou", "MenTouGou", "ShunYi")
