ggplot(data2017, aes(x=bedRoom))+
geom_bar(fill='lightblue', color='black') + # use geom_bar() instead of geom_histogram()
xlab("bedRoom")+ylab("Count")+ggtitle("Number of bedroom Histogram")
knitr::include_graphics("beijing_map.jpeg")
# loading libraries
library(lubridate)
library(dplyr)
library(VIM)
library(stringr)
library(ggplot2)
library(naniar)
# the following code is used to import dataset that includes Chinese character
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
data2017 <- data %>%
mutate(year = year(tradeTime), month = month.name[month(tradeTime)], day = day(tradeTime)) %>%
filter(year == 2017)
data2017 <- data2017 %>%
mutate(totalFloor = as.numeric(str_extract(floor, "(\\d)+")),
floorRange = case_when(str_detect(floor, "顶") ~ "top",
str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "midium",
str_detect(floor, "低") ~ "low",
str_detect(floor, "底") ~ "bottom"))
data2017 <- data2017 %>%
rename(livingRoom = drawingRoom, bedRoom = livingRoom) %>%
mutate(constructionTime = as.numeric(constructionTime),
livingRoom = as.numeric(livingRoom),
bedRoom = as.numeric(bedRoom),
bathRoom = as.numeric(bathRoom),
kitchen = as.numeric(kitchen),
subway = as.factor(subway),
elevator = as.factor(elevator),
fiveYearsProperty = as.factor(fiveYearsProperty),
district = recode(district, "1" = "DongCheng",
"2" = "FengTai", "3" = "YiZhuang", "4" = "DaXing",
"5" = "FangShan", "6" = "ChangPing", "7" = "ChaoYang",
"8" = "HaiDian", "9" = "ShiJingShan", "10" = "XiCheng",
"11" = "TongZhou", "12" = "MenTouGou", "13" = "ShunYi"))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.4, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
data2017 <- data2017 %>%
select(-c(url, Lng, Lat, Cid, tradeTime, floor, buildingType, communityAverage, year))
ggplot(data2017, aes(x = month)) +
geom_bar(fill = "light blue") +
scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = day)) +
geom_bar(fill = "light blue", color = "black")
ggplot(data2017, aes(x = totalFloor)) + geom_histogram(color = "black", fill = "blue")
summary(data2017$totalFloor)
data2017 %>% arrange(desc(totalFloor)) %>% select(id, totalFloor, floorRange) %>% head()
data2017 <- data2017 %>%
filter(totalFloor < 60)
ggplot(data2017, aes(x = floorRange)) +
geom_bar(fill = "light blue") +
scale_x_discrete(limits = c("bottom", "low", "midium", "high", "top"))
ggplot(data2017, aes(x=DOM))+
geom_histogram(fill='lightblue', color='black') +
xlab("DOM")+ylab("Count")+ggtitle("Active Days on Market Histogram")
mean(data2017$DOM)
median(data2017$DOM)
quantile(data2017$DOM, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(DOM<=1) %>%
nrow()  # number of houses have less than 1 day on market
data2017 %>%
filter(DOM<=1) %>%
count(month) # In which months are these houses sold
data2017 %>%
filter(DOM<=1) %>%
count(district) # In which districts are these houses sold
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=followers))+
geom_histogram(fill='lightblue', color='black') +
xlab("followers")+ylab("Count")+
ggtitle("followers Histogram")
mean(data2017$followers)
mean(data2017$followers)
quantile(data2017$followers, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
select(id,followers,totalPrice,price,square,district) %>%
slice_max(followers,n=10)
lessthan300 <- data2017 %>%
filter(followers<=300)
nrow(lessthan300)
portion_lessthan300 = nrow(lessthan300)/42004
portion_lessthan300
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) #%>%
#pull()
higher2_5
num_district_percentage <-district_percentage %>%
pull()
ggplot(data2017, aes(x=livingRoom))+
geom_bar(fill='lightblue', color='black') + # use geom_bar() instead of geom_histogram()
xlab("livingRoom")+
ylab("Count")+
ggtitle("Number of Living Rooms Histogram")
table(data2017$livingRoom)/length(data2017$livingRoom)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) #%>%
#pull()
higher2_5
ggplot(data2017, aes(x=district,y=totalPrice))+
boxplot()
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) #%>%
#pull()
higher2_5
ggplot(data2017, aes(x=district,y=totalPrice))+
geom_boxplot()
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>% # number of lower 2.5% houses in each district
count(district) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) #%>%
#pull()
higher2_5
ggplot(data2017, aes(x=district,y=totalPrice))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=price))+
geom_histogram(fill='lightblue', color='black') +
xlab("price")+ylab("Count")+ggtitle("Average price per square meter (in yuan) Histogram")
mean(data2017$price)
quantile(data2017$price, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(price<=1000)
data2017 <- data2017 %>%
filter(price>1000)
summary(data2017$price)
ggplot(data2017, aes(x=district,y=price))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
data2017 %>%
select(id,followers,totalPrice,price,square,district) %>%
slice_max(followers,n=10)
lessthan300 <- data2017 %>%
filter(followers<=300)
nrow(lessthan300)
portion_lessthan300 = nrow(lessthan300)/42004
portion_lessthan300
ggplot(data2017, aes(x=followers))+
geom_histogram(fill='lightblue', color='black') +
xlab("followers")+ylab("Count")+
ggtitle("followers Histogram")
mean(data2017$followers)
mean(data2017$followers)
quantile(data2017$followers, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>% filter(followers>1000)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>%
group_by(district) %>% # number of lower 2.5% houses in each district
summarize(count()) #%>%
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>%
group_by(district) %>% # number of lower 2.5% houses in each district
summarize(n()) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
count(district) #%>%
#pull()
higher2_5
ggplot(data2017, aes(x=district,y=totalPrice))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>%
group_by(district) %>% # number of lower 2.5% houses in each district
summarize(n()) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
filter(totalPrice>=1250) %>%
group_by(district) %>%
summarise(n())
#pull()
higher2_5
ggplot(data2017, aes(x=district,y=totalPrice))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
median(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>%
group_by(district) %>% # number of lower 2.5% houses in each district
summarize(n()) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
group_by(district) %>%
filter(totalPrice>=1250) %>%
summarise(n())
#pull()
higher2_5
ggplot(data2017, aes(x=district,y=totalPrice))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# tried to compute percenatge of low&high 2.5% within each district to find out what affect DongCheng and XiCheng
lower2_5 <- data2017 %>%
filter(totalPrice<=215) %>%
group_by(district) %>% # number of lower 2.5% houses in each district
summarize(n()) #%>%
#pull()
lower2_5
higher2_5 <- data2017 %>% # number of higher 2.5% houses in each district
group_by(district) %>%
filter(totalPrice>=1250) %>%
summarise(n())
#pull()
higher2_5
ggplot(data2017, aes(x=district,y=totalPrice))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
