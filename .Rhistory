arrange(desc(n))
district_percentage
data2017 %>%
filter(kitchen > 2)
data2017 <- data2017 %>%
filter(kitchen < 3)
ggplot(data2017, aes(x = kitchen)) +
geom_bar(fill = "lightblue") +
ggtitle("Kitchen Summary") +
xlab("Number of Kitchens") +
ylab("Count")
ggplot(data2017, aes(x = bathRoom)) +
geom_bar(fill = "lightblue") +
ggtitle("Bathroom Summary") +
xlab("Number of Bathrooms") +
ylab("Count")
table(data2017$constructionTime)
median(data2017$constructionTime)
mean(data2017$constructionTime)
ggplot(data2017, aes(x = constructionTime)) +
geom_bar(fill = "lightblue") +
ggtitle("Time of Construction Summary") +
xlab("Time of Construction") +
ylab("Count")
ggplot(data2017, aes(x = renovationCondition)) +
geom_bar(fill = "lightblue") +
ggtitle("Condition of Renovation Summary") +
xlab("Condition of Renovation") +
ylab("Count")
ggplot(data2017, aes(x = buildingStructure)) +
geom_bar(fill = "lightblue") +
ggtitle("Structure of Building Summary") +
xlab("Structure of Building") +
ylab("Count")
data2017 <- data2017 %>%
filter(ladderRatio < 5)
table(data2017$ladderRatio)
median(data2017$ladderRatio)
mean(data2017$ladderRatio)
ggplot(data2017, aes(x = ladderRatio)) +
geom_bar(fill = "lightblue", width = 0.05) +
ggtitle("Ladder Ratio Summary") +
xlab("Ladder Ratio") +
ylab("Count")
ggplot(data2017, aes(x = elevator)) +
geom_bar(fill = "lightblue") +
ggtitle("Availability of Elevator") +
xlab("Elevator") +
ylab("Count")
ggplot(data2017, aes(x = fiveYearsProperty)) +
geom_bar(fill = "lightblue") +
ggtitle("Five Years Property Summary") +
xlab("Five Years Property") +
ylab("Count")
ggplot(data2017, aes(x = subway)) +
geom_bar(fill = "lightblue") +
ggtitle("Subway Summary") +
xlab("Availability of Nearby Subways") +
ylab("Count")
set.seed(428)
index <- sample(nrow(data2017),21002,replace = FALSE)
train <- data2017[index,c(2,3,5:22)] # exclude total price
test <- data2017[-index,c(2,3,5:22)] # exclude total price
linear_model <- lm(price~., data = train)
summary(linear_model)
# training MSE
pred_train_lm <- predict(linear_model, train, type="response")
mean((pred_train_lm-train$price)^2)
# testing MSE
pred_test_lm <- predict(linear_model, test, type="response")
mean((pred_test_lm-test$price)^2)
ggplot(data2017, aes(x=DOM))+
geom_histogram(fill='lightblue', color='black') +
xlab("DOM")+ylab("Count")+ggtitle("Active Days on Market Histogram")
mean(data2017$DOM)
median(data2017$DOM)
quantile(data2017$DOM, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
table(data2017$DOM)
data2017 %>%
filter(DOM<=1) %>%
nrow()  # number of houses have less than 1 day on market
data2017 %>%
filter(DOM<=1) %>%
count(month) # In which months are these houses sold
data2017 %>%
filter(DOM<=1) %>%
count(district) # In which districts are these houses sold
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM))+
geom_histogram(fill='lightblue', color='black') +
xlab("DOM")+ylab("Count")+ggtitle("Active Days on Market Histogram")
mean(data2017$DOM)
median(data2017$DOM)
quantile(data2017$DOM, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(DOM<=1) %>%
nrow()  # number of houses have less than 1 day on market
ggplot(data2017, aes(x=DOM))+
geom_histogram(fill='lightblue', color='black') +
xlab("DOM")+ylab("Count")+ggtitle("Active Days on Market Histogram")
median(data2017$DOM)
quantile(data2017$DOM, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(DOM<=1) %>%
nrow()  # number of houses have less than 1 day on market
ggplot(data2017, aes(x=DOM))+
geom_histogram(fill='lightblue', color='black') +
xlab("DOM")+ylab("Count")+ggtitle("Active Days on Market Histogram")
median(data2017$DOM)
quantile(data2017$DOM, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(DOM<=1) %>%
nrow()  # number of houses have less than 1 day on market
ggplot(data2017, aes(x=followers))+
geom_histogram(fill='lightblue', color='black') +
xlab("followers")+ylab("Count")+
ggtitle("followers Histogram")
median(data2017$followers)
quantile(data2017$followers, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>% filter(followers>1000)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
ggplot(data2017, aes(x=district,y=totalPrice))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=price))+
geom_histogram(fill='lightblue', color='black') +
xlab("price")+ylab("Count")+ggtitle("Average price per square meter (in yuan) Histogram")
median(data2017$price)
quantile(data2017$price, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(price<=1000)
data2017 <- data2017 %>%
filter(price>1000)
summary(data2017$price)
ggplot(data2017, aes(x=district,y=price))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=price))+
geom_histogram(fill='lightblue', color='black') +
xlab("price")+ylab("Count")+ggtitle("Average price per square meter (in yuan) Histogram")
mean(data2017$price)
quantile(data2017$price, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(price<=1000)
data2017 <- data2017 %>%
filter(price>1000)
summary(data2017$price)
ggplot(data2017, aes(x=district,y=price))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=followers))+
geom_histogram(fill='lightblue', color='black') +
xlab("followers")+ylab("Count")+
ggtitle("followers Histogram")
mean(data2017$followers)
quantile(data2017$followers, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>% filter(followers>1000)
ggplot(data2017, aes(x=DOM))+
geom_histogram(fill='lightblue', color='black') +
xlab("DOM")+ylab("Count")+ggtitle("Active Days on Market Histogram")
mean(data2017$DOM)
quantile(data2017$DOM, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(DOM<=1) %>%
nrow()  # number of houses have less than 1 day on market
ggplot(data2017, aes(x=price))+
geom_histogram(fill='lightblue', color='black') +
xlab("price")+ylab("Count")+ggtitle("Average price per square meter (in yuan) Histogram")
mean(data2017$price)
quantile(data2017$price, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(price<=1000)
data2017 <- data2017 %>%
filter(price>1000)
summary(data2017$price)
ggplot(data2017, aes(x=district,y=price))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=square))+
geom_histogram(fill='lightblue', color='black') +
xlab("square")+ylab("Count")+ggtitle("square of the House Histogram")
mean(data2017$square)
quantile(data2017$square, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017%>%
filter(square>=167) %>%
count(district)
data2017%>%
filter(square>=167 & district=="ChangPing")
ggplot(data2017, aes(x=square))+
geom_histogram(fill='lightblue', color='black') +
xlab("square")+ylab("Count")+ggtitle("square of the House Histogram")
mean(data2017$square)
quantile(data2017$square, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
ggplot(data2017, aes(x=bedRoom))+
geom_bar(fill='lightblue', color='black') + # use geom_bar() instead of geom_histogram()
xlab("bedRoom")+ylab("Count")+ggtitle("Number of bedroom Histogram")
mean(data2017$bedRoom)
quantile(data2017$bedRoom, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# 1 house with 0 bed room
table(data2017$bedRoom)
data2017 %>%
slice_max(bedRoom,n=1)
data2017 %>%
slice_min(bedRoom,n=1)
ggplot(data2017, aes(x=livingRoom))+
geom_bar(fill='lightblue', color='black') + # use geom_bar() instead of geom_histogram()
xlab("livingRoom")+
ylab("Count")+
ggtitle("Number of Living Rooms Histogram")
mean(data2017$livingRoom)
quantile(data2017$livingRoom, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
ggplot(data2017, aes(x=livingRoom))+
geom_bar(fill='lightblue', color='black') + # use geom_bar() instead of geom_histogram()
xlab("livingRoom")+
ylab("Count")+
ggtitle("Number of Living Rooms Histogram")
mean(data2017$livingRoom)
quantile(data2017$livingRoom, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
table(data2017$livingRoom)/length(data2017$livingRoom)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
table(data2017$district)/length(data2017$district)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
table(data2017$district)/length(data2017$district)*100
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
table(data2017$district)/length(data2017$district)*100
table(data2017$district)
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>%
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+
ylab("Count")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>% # number of houses sold in each district
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
ylab("Count")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>% # number of houses sold in each district
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>% # number of houses sold in each district
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
district_percentage <- data2017 %>%
group_by(district) %>%
count(district) %>% # number of houses sold in each district
mutate(percentage=n*100/42004) %>% # what percentage of sold houses are in each district
arrange(desc(n))
district_percentage
data2017 %>%
filter(kitchen > 2)
ggplot(data2017, aes(x = bathRoom)) +
geom_bar(fill = "lightblue") +
ggtitle("Bathroom Summary") +
xlab("Number of Bathrooms") +
ylab("Count")
table(data2017$constructionTime)
median(data2017$constructionTime)
mean(data2017$constructionTime)
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
data2017
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
table(data2017$DOM)
data2017 %>%
filter(DOM<=1) %>%
nrow()
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
table(data2017$DOM)
data2017 %>%
filter(DOM<=1) %>%
nrow()
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
data2017 %>%
filter(DOM<=1) %>%
nrow()
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
table(data2017$DOM<=1)
table(data2017$DOM<=1,followers) # number of 0 or 1
table(data2017$DOM<=1) # number of 0 or 1
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_line()
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_point()
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_histogram()
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_col()
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_bar()
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_bar(fill="lightblue")
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_col(fill="lightblue")
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
xlim(0,200)+
geom_col(fill="lightblue")
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
xlim(0,200)+
geom_histogram(fill='lightblue', color='black')
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
xlim(0,100)+
geom_col(fill="lightblue")
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
#xlim(0,100)+
geom_col(fill="lightblue")
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_col(fill="lightblue")
data2017%>%
filter(square>=167) %>%
count(district)
data2017%>%
filter(square>=167 & district=="ChangPing")
data2017%>%
filter(square>=167) %>%
count(district)
data2017%>%
filter(square>=167 & district=="ChangPing")
table(data2017$square>=167,data2017$district=="ChangPing")
data2017%>%
filter(square>=167) %>%
count(district)
data2017%>%
filter(square<=37) %>%
count(district)
data2017%>%
filter(square>=167 & district=="ChangPing")
table(data2017$square>=167,data2017$district=="ChangPing") #
data2017%>%
filter(square>=167) %>% # top 2.5% large houses
count(district)
data2017%>%
filter(square<=37) %>% # bottom 2.5% small houses
count(district)
data2017%>%
filter(square>=167 & district=="ChangPing")
data2017%>%
filter(square<=37 & district=="ChangPing")
table(data2017$square>=167,data2017$district=="ChangPing") #
ggplot(data2017, aes(x = constructionTime)) +
geom_bar(fill = "lightblue") +
ggtitle("Distribution of Time of Construction by District") +
xlab("Time of Construction") +
ylab("Count") +
facet_wrap(~ district)
ggplot(data2017, aes(x = constructionTime)) +
geom_bar(fill = "lightblue") +
ggtitle("Distribution of Time of Construction by District") +
xlab("Time of Construction") +
ylab("Count") +
facet_wrap(~ district)
table(data2017$DOM<=1) # number of 0 or 1 Days in market
data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(data2017, aes(x=DOM,y=followers))+
geom_col(fill="lightblue")
data2017%>%
filter(square>=167) %>% # top 2.5% large houses
count(district)
data2017%>%
filter(square<=37) %>% # bottom 2.5% small houses
count(district)
data2017%>%
filter(square>=167 & district=="ChangPing")
data2017%>%
filter(square<=37 & district=="ChangPing")
table(data2017$square>=167,data2017$district=="ChangPing") #
# proportion of large houses in ChaoYang
