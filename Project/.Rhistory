library(readr)
test <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
test <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
# the following code are used to import dataset that includes Chinese character
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
library(lubridate)
library(dplyr)
data2017 <- data %>%
mutata(year = year(tradeTime), month = month(tradeTime), day = day(tradeTime)) %>%
filter(year == 2017)
library(lubridate)
library(dplyr)
data2017 <- data %>%
mutate(year = year(tradeTime), month = month(tradeTime), day = day(tradeTime)) %>%
filter(year == 2017)
library(lubridate)
library(dplyr)
data2017 <- data %>%
mutate(year = year(tradeTime), month = month(tradeTime), day = day(tradeTime)) %>%
filter(year == 2017)
head(data2017)
table(is.na(data2017))
library(mice)
md.pattern(data2017)
data3 <- na.omit(data2)
table(is.na(data2017))
library(VIM)
morehouses_plot <- aggr(data2017, col=c('navyblue','yellow'),numbers=TRUE, sortVars=TRUE, labels=names(morehouses), cex.axis=.7, gap=3, ylab=c("Missing data","Pattern"))
table(is.na(data2017))
library(VIM)
morehouses_plot <- aggr(data2017, col=c('navyblue','yellow'),numbers=TRUE, sortVars=TRUE, labels=names(data2017), cex.axis=.7, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
table(is.na(data2017))
table(is.na(data2017))
morehouses_plot <- aggr(data2017, col=c('blue','red'),numbers=TRUE, sortVars=TRUE, labels=names(data2017), cex.axis=.7, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
table(is.na(data2017))
table(is.na(data2017))
morehouses_plot <- aggr(data2017, col=c('navyblue','yellow'),numbers=TRUE, sortVars=TRUE, labels=names(data2017), cex.axis=.7, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
table(is.na(data2017))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('navyblue','yellow'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.7, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
table(is.na(data2017))
# the following code is used to import dataset that includes Chinese character
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
data2017 <- data %>%
mutate(year = year(tradeTime), month = month(tradeTime), day = day(tradeTime)) %>%
filter(year == 2017)
head(data2017)
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','lightpink'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.7, gap=3, ylab=c("Missing data","Pattern"))
# data2017 <- na.omit(data2017)
# table(is.na(data2017))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.7, gap=3, ylab=c("Missing data","Pattern"))
# data2017 <- na.omit(data2017)
# table(is.na(data2017))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.4, gap=3, ylab=c("Missing data","Pattern"))
# data2017 <- na.omit(data2017)
# table(is.na(data2017))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=FALSE, sortVars=TRUE,
labels=names(data2017), cex.axis=.4, gap=3, ylab=c("Missing data","Pattern"))
# data2017 <- na.omit(data2017)
# table(is.na(data2017))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.4, gap=3, ylab=c("Missing data","Pattern"))
# data2017 <- na.omit(data2017)
# table(is.na(data2017))
data2017 <- na.omit(data2017)
# loading libraries
library(lubridate)
library(dplyr)
library(VIM)
# the following code is used to import dataset that includes Chinese character
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
data2017 <- data %>%
mutate(year = year(tradeTime), month = month(tradeTime), day = day(tradeTime)) %>%
filter(year == 2017)
head(data2017)
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.4, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
View(data2017)
str_extract(`data2017$floor`, "(\\d)+")
library(stringr)
str_extract(`data2017$floor`, "(\\d)+")
str_extract(data2017$floor, "(\\d)+")
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(data2017$floor, "(\\d)+"))
str_detect(data2017$floor, "高")
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(data2017$floor, "(\\d)+"),
high = if_else(str_detect(data2017$floor, "高"), "high", NA))
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(floor, "(\\d)+"),
high = if_else(str_detect(floor, "高"), "high", NA))
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(floor, "(\\d)+"),
high = if_else(str_detect(floor, "高"), "high", "NA"))
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(floor, "(\\d)+"),
high = if_else(str_detect(floor, "高"), "high", "NA"),
medium = if_else(str_detect(floor, "中"), "medium", "NA"))
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(floor, "(\\d)+"),
floorRange = case_when(str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "medium",
str_detect(floor, "低") ~ "low"))
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(floor, "(\\d)+"),
floorRange = case_when(str_detect(floor, "顶") ~ "top",
str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "medium",
str_detect(floor, "低") ~ "low"))
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(floor, "(\\d)+"),
floorRange = case_when(str_detect(floor, "顶") ~ "top",
str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "medium",
str_detect(floor, "低") ~ "low",
str_detect(floor, "底") ~ "bottom"))
data2017 %>% select(floor) %>% head()
data2017 %>% select(floor) %>% head(3)
data2017 <- data %>%
mutate(year = year(tradeTime), month = month(tradeTime), day = day(tradeTime)) %>%
filter(year == 2017)
data2017 %>% select(floor) %>% head(3)
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(floor, "(\\d)+"),
floorRange = case_when(str_detect(floor, "顶") ~ "top",
str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "medium",
str_detect(floor, "低") ~ "low",
str_detect(floor, "底") ~ "bottom"))
View(data2017)
View(data2017)
data2017 <- data2017 %>%
select(-c(url, Lng, Lat, Cid, tradeTime, floor, buildingType, communityAverage))
View(data2017)
hist(data2017$price)
data2 %>%
filter(price<1000)
data2017 %>%
filter(price<1000)
summary(data2017$price)
data2017 %>%
select(url,id,totalPrice, price, square, livingRoom, drawingRoom)%>%
filter(square>700)
data2017 %>%
filter(square>700)
data2017 <- data2017 %>%
filter(square < 1000)
data2017 %>%
filter(kitchen>2)
data2017 %>%
filter(kitchen>2)
data2017 <- data2017 %>%
filter(kitchen < 3)
library(ggplot2)
ggplot(data2017, aes(x = month)) + geom_bar()
data2017 <- data %>%
mutate(year = year(tradeTime), month = month.name(tradeTime), day = day(tradeTime)) %>%
filter(year == 2017)
data2017 <- data %>%
mutate(year = year(tradeTime), month = month.name(month(tradeTime)), day = day(tradeTime)) %>%
filter(year == 2017)
# the following code is used to import dataset that includes Chinese character
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
data2017 <- data %>%
mutate(year = year(tradeTime), month = month.name(month(tradeTime)), day = day(tradeTime)) %>%
filter(year == 2017)
data2017 <- data %>%
mutate(year = year(tradeTime), month = month.name[month(tradeTime)], day = day(tradeTime)) %>%
filter(year == 2017)
View(data2017)
ggplot(data2017, aes(x = month)) + geom_bar()
ggplot(data2017, aes(x = month)) + geom_bar() + scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = month)) +
geom_bar() +
scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = month, fill = "green")) +
geom_bar() +
scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = month, fill = "red")) +
geom_bar() +
scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = month, fill = "blue")) +
geom_bar() +
scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = month)) +
geom_bar(fill = "light blue") +
scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = day)) +
geom_bar(fill = "light blue")
ggplot(data2017, aes(x = day)) +
geom_bar(fill = "blue")
ggplot(data2017, aes(x = day)) +
geom_bar(fill = "light purple")
ggplot(data2017, aes(x = day)) +
geom_bar(fill = "purple")
# the following code is used to import dataset that includes Chinese character
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
data2017 <- data %>%
mutate(year = year(tradeTime), month = month.name[month(tradeTime)], day = day(tradeTime)) %>%
filter(year == 2017)
data2017 %>% select(floor) %>% head(3)
data2017 <- data2017 %>%
mutate(totalFloor = str_extract(floor, "(\\d)+"),
floorRange = case_when(str_detect(floor, "顶") ~ "top",
str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "medium",
str_detect(floor, "低") ~ "low",
str_detect(floor, "底") ~ "bottom"))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.4, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
data2017 <- data2017 %>%
select(-c(url, Lng, Lat, Cid, tradeTime, floor, buildingType, communityAverage))
summary(data2017$price)
data2017 <- data2017 %>%
filter(price>1000)
data2017 <- data2017 %>%
filter(square < 1000)
data2017 %>%
filter(kitchen>2)
data2017 <- data2017 %>%
filter(kitchen < 3)
ggplot(data2017, aes(x = month)) +
geom_bar(fill = "light blue") +
scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = day)) +
geom_bar(fill = "purple")
ggplot(data2017, aes(x = floorRange)) +
geom_bar(fill = "purple")
ggplot(data2017, aes(x = floorRange)) +
geom_bar(fill = "purple") +
scale_x_discrete(limits = c("bottom", "low", "medium", "high", "top"))
ggplot(data2017, aes(x = floorRange)) +
geom_bar(fill = "violet") +
scale_x_discrete(limits = c("bottom", "low", "medium", "high", "top"))
ggplot(data2017, aes(x = floorRange)) +
geom_bar(fill = "light green") +
scale_x_discrete(limits = c("bottom", "low", "medium", "high", "top"))
ggplot(data2017, aes(x = floorRange)) +
geom_bar(fill = "green") +
scale_x_discrete(limits = c("bottom", "low", "medium", "high", "top"))
data2017 <- data2017 %>%
filter(ladderRatio < 5)
ggplot(data2017, aes(x = totalFloor)) +
geom_line()
ggplot(data2017, aes(x = totalFloor)) +
geom_histogram()
ggplot(data2017, aes(x = totalFloor)) +
geom_histogram()
ggplot(data2017, aes(x = totalFloor)) + geom_histogram()
View(data2017)
class(data2017$totalFloor)
data2017 <- data2017 %>%
mutate(totalFloor = as.numeric(str_extract(floor, "(\\d)+")),
floorRange = case_when(str_detect(floor, "顶") ~ "top",
str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "midium",
str_detect(floor, "低") ~ "low",
str_detect(floor, "底") ~ "bottom"))
# the following code is used to import dataset that includes Chinese character
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
data2017 <- data %>%
mutate(year = year(tradeTime), month = month.name[month(tradeTime)], day = day(tradeTime)) %>%
filter(year == 2017)
data2017 %>% select(floor) %>% head(3)
data2017 <- data2017 %>%
mutate(totalFloor = as.numeric(str_extract(floor, "(\\d)+")),
floorRange = case_when(str_detect(floor, "顶") ~ "top",
str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "midium",
str_detect(floor, "低") ~ "low",
str_detect(floor, "底") ~ "bottom"))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.4, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
data2017 <- data2017 %>%
select(-c(url, Lng, Lat, Cid, tradeTime, floor, buildingType, communityAverage))
ggplot(data2017, aes(x = totalFloor)) + geom_histogram()
ggplot(data2017, aes(x = totalFloor)) + geom_histogram()
summary(data2017$totalFloor)
data2017 %>% filter(totalFloor >40)
data2017 %>% filter(totalFloor >40) %>% select(id, totalFloor, floorRange)
View(data)
data[data$id == "101101127418",]
ggplot(data2017, aes(x = totalFloor)) + geom_histogram()
summary(data2017$totalFloor)
data2017 %>% filter(totalFloor >40) %>% select(id, totalFloor, floorRange)
data[data$id == "101101127418",]
data[data$id == "101101690389",]
ggplot(data2017, aes(x = totalFloor)) + geom_histogram()
summary(data2017$totalFloor)
data2017 %>% filter(totalFloor >40) %>% select(id, totalFloor, floorRange)
data[data$id == "101101690389",]
ggplot(data2017, aes(x = totalFloor)) + geom_histogram(color = "black", fill = "white")
summary(data2017$totalFloor)
data2017 %>% filter(totalFloor >40) %>% select(id, totalFloor, floorRange)
data[data$id == "101101690389",]
ggplot(data2017, aes(x = totalFloor)) + geom_histogram(color = "black", fill = "blue")
summary(data2017$totalFloor)
data2017 %>% filter(totalFloor >40) %>% select(id, totalFloor, floorRange)
data[data$id == "101101690389",]
ggplot(data2017, aes(x = totalFloor)) + geom_histogram(color = "black", fill = "blue")
summary(data2017$totalFloor)
data2017 %>% arange(desc(totalFloor)) %>% select(id, totalFloor, floorRange) %>% head()
ggplot(data2017, aes(x = totalFloor)) + geom_histogram(color = "black", fill = "blue")
summary(data2017$totalFloor)
data2017 %>% arrange(desc(totalFloor)) %>% select(id, totalFloor, floorRange) %>% head()
data[data$id == "101101690389",]
data[data$id == "101101127418",]
ggplot(data2017, aes(x = totalFloor)) + geom_histogram(color = "black", fill = "blue")
summary(data2017$totalFloor)
data2017 %>% arrange(desc(totalFloor)) %>% select(id, totalFloor, floorRange) %>% head()
data[data$id == "101101127418",]
ggplot(data2017, aes(x = totalFloor)) + geom_histogram(color = "black", fill = "blue")
summary(data2017$totalFloor)
data2017 %>% arrange(desc(totalFloor)) %>% select(id, totalFloor, floorRange) %>% head()
data2017 <- data2017 %>%
filter(totalFloor < 60)
