geom_bar(fill='lightblue', color='black') +
xlab("bedRoom")+ylab("Count")+ggtitle("Number of bedroom Barplot")
mean(data2017$bedRoom)
quantile(data2017$bedRoom, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017[data2017$bedRoom == 0, 8] <- 0
data2017[data2017$bedRoom == 0, 7] <- 1
ggplot(data2017, aes(x=bedRoom))+
geom_bar(fill='lightblue', color='black') +
xlab("bedRoom")+ylab("Count")+ggtitle("Number of bedroom Barplot")
ggplot(data2017, aes(x=livingRoom))+
geom_bar(fill='lightblue', color='black') +
xlab("livingRoom")+ylab("Count")+ggtitle("Number of Living Rooms Histogram")
table(data2017$livingRoom)/length(data2017$livingRoom)
mean(data2017$livingRoom)
quantile(data2017$livingRoom, c(0,0.025,0.25,0.5,0.75,0.975,1))
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+ylab("Count")+theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
table(data2017$district)/length(data2017$district) # percentage of houses sold in each district
core_district <- data2017 %>%
filter(district %in% c("XiCheng" , "DongCheng" , "ChaoYang" , "HaiDian" , "ShiJingShan" , "FengTai")) %>% nrow()
suburb <- data2017 %>%
filter(district %in% c("DaXing", "ChangPing", "FangShan", "MenTouGou", "ShunYi", "TongZhou")) %>% nrow()
district_table <- data.frame(district = c("suburbs", "core district"), numbers = c(suburb, core_district))
district_table$label <- scales::percent(district_table$numbers/length(data2017$district))
ggplot(district_table, aes(x="", y=numbers, fill=district)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(x=1, y = cumsum(numbers) - numbers/2, label=label))
ggplot(data2017, aes(x = kitchen)) +
geom_bar(fill = "lightblue") +
ggtitle("Kitchen Summary") + xlab("Number of Kitchens") + ylab("Count")
data2017 %>%
filter(kitchen > 2)
data2017 <- data2017 %>%
filter(kitchen < 3)
ggplot(data2017, aes(x = bathRoom)) +
geom_bar(fill = "lightblue") +
ggtitle("Bathroom Summary") + xlab("Number of Bathrooms") + ylab("Count")
data2017 %>% filter(bathRoom > 4) %>% select(id, price, square, bedRoom, bathRoom)
data2017 <- data2017 %>% filter(!id %in% c("101092296449", "101101797841", "101101509627"))
quantile(data2017$constructionTime, c(0, .025, .25, .5, .75, .975, 1))
ggplot(data2017, aes(x = constructionTime)) +
geom_histogram(fill = "lightblue") +
ggtitle("Time of Construction Summary") + xlab("Time of Construction") + ylab("Count")
data2017$renovationCondition <- factor(data2017$renovationCondition,
levels = c("other", "rough", "simplicity", "hardcover"))
ggplot(data2017, aes(x = renovationCondition)) +
geom_bar(fill = "lightblue") +
ggtitle("Condition of Renovation Summary") + xlab("Condition of Renovation") + ylab("Count")
ggplot(data2017, aes(x = buildingStructure)) +
geom_bar(fill = "lightblue") +
ggtitle("Structure of Building Summary") + xlab("Structure of Building") + ylab("Count")
table(data2017$buildingStructure)
quantile(data2017$ladderRatio, c(0, .025, .25, .5, .75, .975, 1))
ggplot(data2017, aes(x = ladderRatio)) +
geom_histogram(fill = "lightblue") +
ggtitle("Ladder Ratio Summary") + xlab("Ladder Ratio") + ylab("Count")
data2017 <- data2017 %>%
filter(ladderRatio < 5)
ggplot(data2017, aes(x = ladderRatio)) +
geom_histogram(fill = "lightblue") +
ggtitle("Ladder Ratio Summary") + xlab("Ladder Ratio") + ylab("Count")
ggplot(data2017, aes(x = elevator)) +
geom_bar(fill = "lightblue") +
ggtitle("Availability of Elevator") +xlab("Elevator") +ylab("Count")
ggplot(data2017, aes(x = fiveYearsProperty)) +
geom_bar(fill = "lightblue") +
ggtitle("Five Years Property Summary") + xlab("Five Years Property") + ylab("Count")
ggplot(data2017, aes(x = subway)) +
geom_bar(fill = "lightblue") +
ggtitle("Subway Summary") + xlab("Availability of Nearby Subways") + ylab("Count")
table(data2017$DOM<=1) # houses are 0 or 1 Days on market
follower1DOM <- data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(follower1DOM, aes(x=followers,y=n))+
geom_col(fill="lightblue")
ggplot(data2017, aes(x=DOM,y=followers))+ # overall number of followers vs. DOM
geom_point(alpha=.1)+
geom_smooth()+
xlim(0,200)
price_district <- data2017 %>%
group_by(district) %>%
summarise(meanPriceDistrict=mean(price))
ggplot(price_district, aes(x=reorder(district, meanPriceDistrict), y=meanPriceDistrict))+
geom_col(fill="lightblue") +
ggtitle("Mean Price vs. District") +ylab("mean price")+xlab("")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=reorder(district, price),y=price))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
ggtitle("District price boxplot") +ylab("price")+xlab("districts")
ggplot(data2017, aes(x = constructionTime)) +
geom_bar(fill = "lightblue") +
ggtitle("Distribution of Time of Construction by District") + xlab("Time of Construction") + ylab("Count") +
facet_wrap(~ district)
ggplot(data2017, aes(x = renovationCondition)) +
geom_bar(fill = "lightblue") +
ggtitle("Distribution of Renovation Condition by District") + xlab("Renovation Condition") + ylab("Count") +
facet_wrap(~ district) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
large <- data2017 %>%
filter(square>=166.6) %>% # number of large houses in each district
count(district)
small <- data2017 %>%
filter(square<=37.27) %>% # number of small houses in each district
count(district)
full1 <- small %>%
full_join(large,by="district",suffix = c("_small","_large"))
pivot <- full1 %>%
pivot_longer(col=c("n_large","n_small"))
meanKitchen <- data2017 %>%
group_by(kitchen) %>%
summarise(meanKitchenPrice=mean(price))
ggplot(meanKitchen, aes(x=kitchen, y=meanKitchenPrice))+
geom_col(fill="lightblue")
meanKitchenDistrict <- data2017 %>%
group_by(kitchen,district) %>%
summarise(meanKitchenDistrictPrice=mean(price))
ggplot(meanKitchenDistrict, aes(x=kitchen, y=meanKitchenDistrictPrice))+
facet_wrap(~district)+
geom_col(fill="lightblue")
meanBedDistrict <- data2017 %>%
group_by(bedRoom,district) %>%
summarise(meanBedDistrictPrice=mean(price))
ggplot(meanBedDistrict, aes(x=bedRoom, y=meanBedDistrictPrice))+
facet_wrap(~district)+
geom_col(fill="lightblue")
meanBath <- data2017 %>%
group_by(bathRoom) %>%
summarise(meanBathPrice=mean(price))
ggplot(meanBath, aes(x=bathRoom, y=meanBathPrice))+
geom_col(fill="lightblue")
meanBathDistrict <- data2017 %>%
group_by(bathRoom, district) %>%
summarise(meanBathDistrictPrice=mean(price))
ggplot(meanBathDistrict, aes(x=bathRoom, y=meanBathDistrictPrice))+
geom_col(fill="lightblue")+
facet_wrap(~district)
table(data2017$bathRoom==0)
ggplot(data2017, aes(x = DOM, y = price)) +
geom_point() +
labs(x = "days on market", y = "Price", title = "Price vs Days on Market") +
geom_smooth()
cor(data2017$price, data2017$DOM)
table(data2017$DOM<=1) # houses are 0 or 1 Days on market
follower1DOM <- data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(follower1DOM, aes(x=followers,y=n))+
geom_col(fill="lightblue")
table(data2017$DOM<=1) # houses are 0 or 1 Days on market
follower1DOM <- data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(follower1DOM, aes(x=followers,y=n))+
geom_col(fill="lightblue")
table(data2017$DOM<=1) # houses are 0 or 1 Days on market
follower1DOM <- data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(follower1DOM, aes(x=followers,y=n))+
geom_col(fill="lightblue")
core_district <- data2017 %>%
filter(district %in% c("XiCheng" , "DongCheng" , "ChaoYang" , "HaiDian" , "ShiJingShan" , "FengTai")) %>% nrow()
suburb <- data2017 %>%
filter(district %in% c("DaXing", "ChangPing", "FangShan", "MenTouGou", "ShunYi", "TongZhou")) %>% nrow()
district_table <- data.frame(district = c("suburbs", "core district"), numbers = c(suburb, core_district))
district_table$label <- scales::percent(district_table$numbers/length(data2017$district))
ggplot(district_table, aes(x="", y=numbers, fill=district)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(x=1, y = cumsum(numbers) - numbers/2, label=label))
meanBath <- data2017 %>%
group_by(bathRoom) %>%
summarise(meanBathPrice=mean(price))
ggplot(meanBath, aes(x=bathRoom, y=meanBathPrice))+
geom_col(fill="lightblue")
meanKitchen <- data2017 %>%
group_by(kitchen) %>%
summarise(meanKitchenPrice=mean(price))
ggplot(meanKitchen, aes(x=kitchen, y=meanKitchenPrice))+
geom_col(fill="lightblue")
knitr::include_graphics("beijing_map.jpeg")
# loading libraries
library(lubridate)
library(dplyr)
library(VIM)
library(stringr)
library(ggplot2)
library(naniar)
library(waffle)
# the following code is used to import dataset that includes Chinese character
data <- read.csv("new.csv", fileEncoding = "GBK", encoding = "GBK")
data2017 <- data %>%
mutate(year = year(tradeTime), month = month.name[month(tradeTime)], day = day(tradeTime)) %>%
filter(year == 2017)
data2017 <- data2017 %>%
mutate(totalFloor = as.numeric(str_extract(floor, "(\\d)+")),
floorRange = case_when(str_detect(floor, "顶") ~ "top",
str_detect(floor, "高") ~ "high",
str_detect(floor, "中") ~ "medium",
str_detect(floor, "低") ~ "low",
str_detect(floor, "底") ~ "bottom"))
data2017 <- data2017 %>%
rename(livingRoom = drawingRoom, bedRoom = livingRoom) %>%
mutate(constructionTime = as.numeric(constructionTime),
livingRoom = as.numeric(livingRoom),
bedRoom = as.numeric(bedRoom),
bathRoom = as.numeric(bathRoom),
kitchen = as.numeric(kitchen),
subway = as.factor(subway),
elevator = as.factor(elevator),
fiveYearsProperty = as.factor(fiveYearsProperty),
district = recode(district, "1" = "DongCheng",
"2" = "FengTai", "3" = "DaXing", "4" = "DaXing",
"5" = "FangShan", "6" = "ChangPing", "7" = "ChaoYang",
"8" = "HaiDian", "9" = "ShiJingShan", "10" = "XiCheng",
"11" = "TongZhou", "12" = "MenTouGou", "13" = "ShunYi"),
subway = recode(subway, "0" = "not_near_subway", "1" = "near_subway"),
elevator = recode(elevator, "0" = "no", "1" = "yes"),
fiveYearsProperty = recode(fiveYearsProperty, "0" = "no", "1" = "yes"),
renovationCondition = recode(renovationCondition, "1" = "other", "2" = "rough",
"3" = "simplicity", "4" = "hardcover"),
buildingStructure = recode(buildingStructure, "1" = "other", "2" = "mixed",
"3" = "brick&wood", "4" = "brick&concrete",
"5" = "steel", "6" = "steel-concrete"))
table(is.na(data2017))
na_plot <- aggr(data2017, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data2017), cex.axis=.4, gap=3, ylab=c("Missing data","Pattern"))
data2017 <- na.omit(data2017)
data2017 <- data2017 %>%
select(-c(url, Lng, Lat, Cid, tradeTime, floor, buildingType, communityAverage, year))
ggplot(data2017, aes(x = month)) +
geom_bar(fill = "light blue") +
scale_x_discrete(limits = month.name)
ggplot(data2017, aes(x = day)) +
geom_histogram(fill = "light blue", color = "black", bins = 31)
quantile(data2017$day)
ggplot(data2017, aes(x = totalFloor)) + geom_histogram(color = "black", fill = "blue")
quantile(data2017$totalFloor, c(0, .025, .25, .5, .75, .975, 1))
data2017 %>% arrange(desc(totalFloor)) %>% select(id, totalFloor, floorRange) %>% head()
data2017 <- data2017 %>%
filter(totalFloor < 60)
data2017$floorRange <- factor(data2017$floorRange,
levels = c("bottom", "low", "medium", "high", "top"))
summary_table <- data2017 %>% group_by(floorRange) %>%
summarise(total = n()) %>%
mutate(percent = round(100 * total / sum(total)))
counts <- summary_table$percent
names(counts) <- summary_table$floorRange
print(counts)
waffle(counts)
ggplot(data2017, aes(x=DOM))+
geom_histogram(fill='lightblue', color='black') +
xlab("DOM")+ylab("Count")+ggtitle("Active Days on Market Histogram")
mean(data2017$DOM)
quantile(data2017$DOM, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>%
filter(DOM<=1) %>%
nrow()  # number of houses have less than 1 day on market
ggplot(data2017, aes(x=followers))+
geom_histogram(fill='lightblue', color='black') +
xlab("followers")+ylab("Count")+ggtitle("followers Histogram")
mean(data2017$followers)
quantile(data2017$followers, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
table(data2017$followers==0) # 2021 houses with 0 follower
data2017 %>% filter(followers>1000)
ggplot(data2017, aes(x=totalPrice))+
geom_histogram(fill='lightblue', color='black') +
xlab("totalPrice")+ylab("Count")+ggtitle("Total price (in 10,000yuan) Histogram")
mean(data2017$totalPrice)
quantile(data2017$totalPrice, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
ggplot(data2017, aes(x=price))+
geom_histogram(fill='lightblue', color='black') +
xlab("price")+ylab("Count")+ggtitle("Average price per square meter (in yuan) Histogram")
mean(data2017$price)
quantile(data2017$price, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
# remove outlier
data2017 <- data2017 %>% filter(price > 1000)
ggplot(data2017, aes(x=square))+
geom_histogram(fill='lightblue', color='black') +
xlab("square")+ylab("Count")+ggtitle("square of the House Histogram")
mean(data2017$square)
quantile(data2017$square, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017 %>% select(price, square, district, bedRoom) %>%
arrange(desc(square)) %>% head(3)
ggplot(data2017, aes(x=bedRoom))+
geom_bar(fill='lightblue', color='black') +
xlab("bedRoom")+ylab("Count")+ggtitle("Number of bedroom Barplot")
mean(data2017$bedRoom)
quantile(data2017$bedRoom, c(0, 0.025, 0.25, 0.5, 0.75, 0.975, 1))
data2017[data2017$bedRoom == 0, 8] <- 0
data2017[data2017$bedRoom == 0, 7] <- 1
ggplot(data2017, aes(x=bedRoom))+
geom_bar(fill='lightblue', color='black') +
xlab("bedRoom")+ylab("Count")+ggtitle("Number of bedroom Barplot")
ggplot(data2017, aes(x=livingRoom))+
geom_bar(fill='lightblue', color='black') +
xlab("livingRoom")+ylab("Count")+ggtitle("Number of Living Rooms Histogram")
table(data2017$livingRoom)/length(data2017$livingRoom)
mean(data2017$livingRoom)
quantile(data2017$livingRoom, c(0,0.025,0.25,0.5,0.75,0.975,1))
ggplot(data2017, aes(x=district))+
geom_bar(fill='lightblue', color='black') +
xlab("district")+ylab("Count")+theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle("District the House located Histogram")
table(data2017$district)/length(data2017$district) # percentage of houses sold in each district
core_district <- data2017 %>%
filter(district %in% c("XiCheng" , "DongCheng" , "ChaoYang" , "HaiDian" , "ShiJingShan" , "FengTai")) %>% nrow()
suburb <- data2017 %>%
filter(district %in% c("DaXing", "ChangPing", "FangShan", "MenTouGou", "ShunYi", "TongZhou")) %>% nrow()
district_table <- data.frame(district = c("suburbs", "core district"), numbers = c(suburb, core_district))
district_table$label <- scales::percent(district_table$numbers/length(data2017$district))
ggplot(district_table, aes(x="", y=numbers, fill=district)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(x=1, y = cumsum(numbers) - numbers/2, label=label))
ggplot(data2017, aes(x = kitchen)) +
geom_bar(fill = "lightblue") +
ggtitle("Kitchen Summary") + xlab("Number of Kitchens") + ylab("Count")
data2017 %>%
filter(kitchen > 2)
data2017 <- data2017 %>%
filter(kitchen < 3)
ggplot(data2017, aes(x = bathRoom)) +
geom_bar(fill = "lightblue") +
ggtitle("Bathroom Summary") + xlab("Number of Bathrooms") + ylab("Count")
data2017 %>% filter(bathRoom > 4) %>% select(id, price, square, bedRoom, bathRoom)
data2017 <- data2017 %>% filter(!id %in% c("101092296449", "101101797841", "101101509627"))
quantile(data2017$constructionTime, c(0, .025, .25, .5, .75, .975, 1))
ggplot(data2017, aes(x = constructionTime)) +
geom_histogram(fill = "lightblue") +
ggtitle("Time of Construction Summary") + xlab("Time of Construction") + ylab("Count")
data2017$renovationCondition <- factor(data2017$renovationCondition,
levels = c("other", "rough", "simplicity", "hardcover"))
ggplot(data2017, aes(x = renovationCondition)) +
geom_bar(fill = "lightblue") +
ggtitle("Condition of Renovation Summary") + xlab("Condition of Renovation") + ylab("Count")
ggplot(data2017, aes(x = buildingStructure)) +
geom_bar(fill = "lightblue") +
ggtitle("Structure of Building Summary") + xlab("Structure of Building") + ylab("Count")
table(data2017$buildingStructure)
quantile(data2017$ladderRatio, c(0, .025, .25, .5, .75, .975, 1))
ggplot(data2017, aes(x = ladderRatio)) +
geom_histogram(fill = "lightblue") +
ggtitle("Ladder Ratio Summary") + xlab("Ladder Ratio") + ylab("Count")
data2017 <- data2017 %>%
filter(ladderRatio < 5)
ggplot(data2017, aes(x = ladderRatio)) +
geom_histogram(fill = "lightblue") +
ggtitle("Ladder Ratio Summary") + xlab("Ladder Ratio") + ylab("Count")
ggplot(data2017, aes(x = elevator)) +
geom_bar(fill = "lightblue") +
ggtitle("Availability of Elevator") +xlab("Elevator") +ylab("Count")
ggplot(data2017, aes(x = fiveYearsProperty)) +
geom_bar(fill = "lightblue") +
ggtitle("Five Years Property Summary") + xlab("Five Years Property") + ylab("Count")
ggplot(data2017, aes(x = subway)) +
geom_bar(fill = "lightblue") +
ggtitle("Subway Summary") + xlab("Availability of Nearby Subways") + ylab("Count")
table(data2017$DOM<=1) # houses are 0 or 1 Days on market
follower1DOM <- data2017 %>%
filter(DOM<=1) %>%
count(followers) # Do houses sold fast have many followers?
ggplot(follower1DOM, aes(x=followers,y=n))+
geom_col(fill="lightblue")
ggplot(data2017, aes(x=DOM,y=followers))+ # overall number of followers vs. DOM
geom_point(alpha=.1)+
geom_smooth()+
xlim(0,200)
price_district <- data2017 %>%
group_by(district) %>%
summarise(meanPriceDistrict=mean(price))
ggplot(price_district, aes(x=reorder(district, meanPriceDistrict), y=meanPriceDistrict))+
geom_col(fill="lightblue") +
ggtitle("Mean Price vs. District") +ylab("mean price")+xlab("")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=reorder(district, price),y=price))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
ggtitle("District price boxplot") +ylab("price")+xlab("districts")
ggplot(data2017, aes(x = constructionTime)) +
geom_bar(fill = "lightblue") +
ggtitle("Distribution of Time of Construction by District") + xlab("Time of Construction") + ylab("Count") +
facet_wrap(~ district)
ggplot(data2017, aes(x = renovationCondition)) +
geom_bar(fill = "lightblue") +
ggtitle("Distribution of Renovation Condition by District") + xlab("Renovation Condition") + ylab("Count") +
facet_wrap(~ district) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
large <- data2017 %>%
filter(square>=166.6) %>% # number of large houses in each district
count(district)
small <- data2017 %>%
filter(square<=37.27) %>% # number of small houses in each district
count(district)
full1 <- small %>%
full_join(large,by="district",suffix = c("_small","_large"))
pivot <- full1 %>%
pivot_longer(col=c("n_large","n_small"))
data2017 %>%
group_by(district, subway) %>%
summarise(average_price = mean(price)) %>%
ggplot(aes(x = district, y = average_price, fill = subway)) +
geom_col(stat = "identity", position = position_dodge(), alpha = 0.75)  +
labs(x = "Districts", y = "price", title = "Price vs District vs Subway") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
meanRenov <- data2017 %>%
group_by(renovationCondition, district) %>%
summarise(meanRenovPrice=mean(price))
ggplot(meanRenov, aes(x=district, y=meanRenovPrice, fill=renovationCondition))+
geom_col(stat = "identity", position = position_dodge(), alpha = 0.75)+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(data2017, aes(x = totalFloor, y = price, color = floorRange)) +
geom_point()+
labs(x = "total number of floors", title = "Price vs Total Floor and Floor Range")
ggplot(data2017, aes(x=followers, y=price))+ geom_point() + geom_smooth() +
labs(title = "Price vs Followers")
monthPrice <- data2017 %>%
group_by(month) %>%
summarise(meanPrice=mean(price))
ggplot(monthPrice,aes(x=month,y=meanPrice))+
geom_col(fill = "lightblue")+
scale_x_discrete(limits = month.name)
large <- data2017 %>%
filter(square>=166.6) %>% # number of large houses in each district
count(district)
small <- data2017 %>%
filter(square<=37.27) %>% # number of small houses in each district
count(district)
full1 <- small %>%
full_join(large,by="district",suffix = c("_small","_large"))
pivot <- full1 %>%
pivot_longer(col=c("n_large","n_small"))
middle <- data2017 %>%
filter(square>=38.63 & square<=149.97) %>%
count(district)
full2 <- full1 %>%
full_join(middle,by="district")
pivot2 <- full2 %>%
pivot_longer(col=c("n_large","n_small","n")) %>%
replace(is.na(.), 0)
# loading libraries
library(lubridate)
library(dplyr)
library(VIM)
library(stringr)
library(ggplot2)
library(naniar)
library(waffle)
large <- data2017 %>%
filter(square>=166.6) %>% # number of large houses in each district
count(district)
small <- data2017 %>%
filter(square<=37.27) %>% # number of small houses in each district
count(district)
full1 <- small %>%
full_join(large,by="district",suffix = c("_small","_large"))
pivot <- full1 %>%
pivot_longer(col=c("n_large","n_small"))
library(tidyverse)
large <- data2017 %>%
filter(square>=166.6) %>% # number of large houses in each district
count(district)
small <- data2017 %>%
filter(square<=37.27) %>% # number of small houses in each district
count(district)
full1 <- small %>%
full_join(large,by="district",suffix = c("_small","_large"))
pivot <- full1 %>%
pivot_longer(col=c("n_large","n_small"))
ggplot(pivot,aes(x=reorder(district, value),y=value,fill=name))+
geom_col()+
facet_wrap(~name)+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
middle <- data2017 %>%
filter(square>=38.63 & square<=149.97) %>%
count(district)
full2 <- full1 %>%
full_join(middle,by="district")
pivot2 <- full2 %>%
pivot_longer(col=c("n_large","n_small","n")) %>%
replace(is.na(.), 0)
ggplot(pivot2,aes(x=district,y=value,fill=name))+
geom_col(position="fill")+ # stacked proportion barplot
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data2017, aes(x=reorder(district, totalPrice),y=totalPrice))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "District vs TotalPrice", x = "district")
data2017 %>% group_by(district, fiveYearsProperty) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = reorder(district, mean_price), y = mean_price, fill = fiveYearsProperty)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75) +
ggtitle("Distribution of Mean Price by District and Five Years Property") +
labs(x = "District", y = "Mean Price") +
theme(plot.title = element_text(hjust = 0.5, face="bold"),
axis.title.x = element_text(face="bold", size = 12),
axis.title.y = element_text(face="bold", size = 12),
legend.title = element_text(face="bold", size = 10)) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
data2017 %>%
group_by(floorRange) %>%
summarise(meanPrice2=mean(price))%>%
ggplot(aes(x=floorRange, y=meanPrice2))+
geom_col(fill="lightblue")
